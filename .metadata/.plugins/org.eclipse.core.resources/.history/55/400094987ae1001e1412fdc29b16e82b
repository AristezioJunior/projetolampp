package com.aristezio.lampp.api.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.springframework.web.bind.annotation.RestController;

import com.aristezio.lampp.domain.model.EncurtadorUrl;
import com.aristezio.lampp.domain.model.EstatisticaTempo;
import com.aristezio.lampp.domain.repository.EncurtadorUrlRepository;

//@AllArgsConstructor
@RestController
@RequestMapping("/urls")
public class EncurtadorUrlController {

	@Autowired   
	EncurtadorUrlRepository repository;
	
	
	@GetMapping
	public List<EncurtadorUrl> listar() {
		List<EncurtadorUrl> list = repository.findAll();
		return 	list;	
	}
	
	@GetMapping("/{encurtadorUrlId}")
	public ResponseEntity<EncurtadorUrl> buscar(@PathVariable Long encurtadorUrlId) {
		return repository.findById(encurtadorUrlId)
				.map(ResponseEntity::ok)
				.orElse(ResponseEntity.notFound().build());		
	}
	
	@PostMapping
	@ResponseStatus(HttpStatus.CREATED)
	public EncurtadorUrl adicionar(@RequestBody EncurtadorUrl encurtadorUrl) {
		return repository.save(encurtadorUrl);
	}
	
	
}	

