package com.aristezio.lampp.api.controller;

import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.aristezio.lampp.domain.model.EncurtadorUrl;
import com.aristezio.lampp.domain.model.ErrorResponse;
import com.aristezio.lampp.domain.repository.EncurtadorUrlRepository;

import lombok.AllArgsConstructor;

@AllArgsConstructor
@RestController
@RequestMapping("/alias")
public class RecuperarUrlController {

	@Autowired
	EncurtadorUrlRepository repository;
	
	@GetMapping("/{codigo}")
	ResponseEntity<Object> redirectToOriginalUrl(@PathVariable String codigo) {
        Optional<EncurtadorUrl> encurtadorUrl = repository.findByCodigo(codigo);
        
        if (encurtadorUrl.isPresent()) {
        	EncurtadorUrl url = encurtadorUrl.get();
            return ResponseEntity.status(HttpStatus.FOUND)
                    .header("Location",codigo)
                    .build();
        	
        } else {
            ErrorResponse errorResponse = new ErrorResponse("002", "SHORTENED URL NOT FOUND");
            return ResponseEntity.status(HttpStatus.NOT_FOUND)
                    .body(errorResponse);
        }


    }
	
}
